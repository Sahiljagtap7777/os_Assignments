#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>

#define MAX_FRAMES 10

bool isPagePresent(int frames[], int num_frames, int page) {
    for (int i = 0; i < num_frames; i++) {
        if (frames[i] == page) {
            return true;
        }
    }
    return false;
}

int lruPageFaults(int reference_string[], int num_pages, int num_frames) {
    int frames[num_frames];
    int recent_used[num_frames];
    int page_faults = 0;

    for (int i = 0; i < num_frames; i++) {
        frames[i] = -1;
        recent_used[i] = 0;
    }

    for (int i = 0; i < num_pages; i++) {
        int page = reference_string[i];
        bool page_hit = false;

        for (int j = 0; j < num_frames; j++) {
            if (frames[j] == page) {
                page_hit = true;
                recent_used[j] = i;
                break;
            }
        }

        if (!page_hit) {
            int least_recently_used = 0;
            for (int j = 1; j < num_frames; j++) {
                if (recent_used[j] < recent_used[least_recently_used])
                    least_recently_used = j;
            }

            frames[least_recently_used] = page;
            recent_used[least_recently_used] = i;
            page_faults++;
        }
    }

    return page_faults;
}

int main() {
    int reference_string[] = {1, 2, 3, 4, 1, 2, 5, 1, 2, 3, 4, 5};
    int num_pages = sizeof(reference_string) / sizeof(reference_string[0]);
    int num_frames = 3;  // Number of frames

    printf("LRU Page Faults: %d\n", lruPageFaults(reference_string, num_pages, num_frames));

    return 0;
}
